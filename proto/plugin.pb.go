// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: plugin.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPluginInfoResponse_Side int32

const (
	GetPluginInfoResponse_CLIENT GetPluginInfoResponse_Side = 0
	GetPluginInfoResponse_SERVER GetPluginInfoResponse_Side = 1
	GetPluginInfoResponse_ANY    GetPluginInfoResponse_Side = 2
)

// Enum value maps for GetPluginInfoResponse_Side.
var (
	GetPluginInfoResponse_Side_name = map[int32]string{
		0: "CLIENT",
		1: "SERVER",
		2: "ANY",
	}
	GetPluginInfoResponse_Side_value = map[string]int32{
		"CLIENT": 0,
		"SERVER": 1,
		"ANY":    2,
	}
)

func (x GetPluginInfoResponse_Side) Enum() *GetPluginInfoResponse_Side {
	p := new(GetPluginInfoResponse_Side)
	*p = x
	return p
}

func (x GetPluginInfoResponse_Side) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPluginInfoResponse_Side) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_proto_enumTypes[0].Descriptor()
}

func (GetPluginInfoResponse_Side) Type() protoreflect.EnumType {
	return &file_plugin_proto_enumTypes[0]
}

func (x GetPluginInfoResponse_Side) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetPluginInfoResponse_Side.Descriptor instead.
func (GetPluginInfoResponse_Side) EnumDescriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{3, 0}
}

type GetPluginInfoResponse_Direction int32

const (
	GetPluginInfoResponse_INGRESS GetPluginInfoResponse_Direction = 0
	GetPluginInfoResponse_EGRESS  GetPluginInfoResponse_Direction = 1
	GetPluginInfoResponse_BOTH    GetPluginInfoResponse_Direction = 2
)

// Enum value maps for GetPluginInfoResponse_Direction.
var (
	GetPluginInfoResponse_Direction_name = map[int32]string{
		0: "INGRESS",
		1: "EGRESS",
		2: "BOTH",
	}
	GetPluginInfoResponse_Direction_value = map[string]int32{
		"INGRESS": 0,
		"EGRESS":  1,
		"BOTH":    2,
	}
)

func (x GetPluginInfoResponse_Direction) Enum() *GetPluginInfoResponse_Direction {
	p := new(GetPluginInfoResponse_Direction)
	*p = x
	return p
}

func (x GetPluginInfoResponse_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPluginInfoResponse_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_proto_enumTypes[1].Descriptor()
}

func (GetPluginInfoResponse_Direction) Type() protoreflect.EnumType {
	return &file_plugin_proto_enumTypes[1]
}

func (x GetPluginInfoResponse_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetPluginInfoResponse_Direction.Descriptor instead.
func (GetPluginInfoResponse_Direction) EnumDescriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{3, 1}
}

type GetPluginCapabilitiesResponse_SupportedProtocol int32

const (
	GetPluginCapabilitiesResponse_NONE       GetPluginCapabilitiesResponse_SupportedProtocol = 0
	GetPluginCapabilitiesResponse_HTTP       GetPluginCapabilitiesResponse_SupportedProtocol = 1
	GetPluginCapabilitiesResponse_HTTPS      GetPluginCapabilitiesResponse_SupportedProtocol = 2
	GetPluginCapabilitiesResponse_POSTGRESQL GetPluginCapabilitiesResponse_SupportedProtocol = 3
)

// Enum value maps for GetPluginCapabilitiesResponse_SupportedProtocol.
var (
	GetPluginCapabilitiesResponse_SupportedProtocol_name = map[int32]string{
		0: "NONE",
		1: "HTTP",
		2: "HTTPS",
		3: "POSTGRESQL",
	}
	GetPluginCapabilitiesResponse_SupportedProtocol_value = map[string]int32{
		"NONE":       0,
		"HTTP":       1,
		"HTTPS":      2,
		"POSTGRESQL": 3,
	}
)

func (x GetPluginCapabilitiesResponse_SupportedProtocol) Enum() *GetPluginCapabilitiesResponse_SupportedProtocol {
	p := new(GetPluginCapabilitiesResponse_SupportedProtocol)
	*p = x
	return p
}

func (x GetPluginCapabilitiesResponse_SupportedProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPluginCapabilitiesResponse_SupportedProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_proto_enumTypes[2].Descriptor()
}

func (GetPluginCapabilitiesResponse_SupportedProtocol) Type() protoreflect.EnumType {
	return &file_plugin_proto_enumTypes[2]
}

func (x GetPluginCapabilitiesResponse_SupportedProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetPluginCapabilitiesResponse_SupportedProtocol.Descriptor instead.
func (GetPluginCapabilitiesResponse_SupportedProtocol) EnumDescriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{5, 0}
}

// Plugin can choose an action to take.
type ProcessHttpRequestResponse_Action int32

const (
	ProcessHttpRequestResponse_CONTINUE ProcessHttpRequestResponse_Action = 0 // continue processing with optional modifications
	ProcessHttpRequestResponse_ABORT    ProcessHttpRequestResponse_Action = 1 // stop all further processing and return a direct response to client
)

// Enum value maps for ProcessHttpRequestResponse_Action.
var (
	ProcessHttpRequestResponse_Action_name = map[int32]string{
		0: "CONTINUE",
		1: "ABORT",
	}
	ProcessHttpRequestResponse_Action_value = map[string]int32{
		"CONTINUE": 0,
		"ABORT":    1,
	}
)

func (x ProcessHttpRequestResponse_Action) Enum() *ProcessHttpRequestResponse_Action {
	p := new(ProcessHttpRequestResponse_Action)
	*p = x
	return p
}

func (x ProcessHttpRequestResponse_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessHttpRequestResponse_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_proto_enumTypes[3].Descriptor()
}

func (ProcessHttpRequestResponse_Action) Type() protoreflect.EnumType {
	return &file_plugin_proto_enumTypes[3]
}

func (x ProcessHttpRequestResponse_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessHttpRequestResponse_Action.Descriptor instead.
func (ProcessHttpRequestResponse_Action) EnumDescriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{10, 0}
}

type ProcessHttpResponseResponse_Action int32

const (
	ProcessHttpResponseResponse_CONTINUE ProcessHttpResponseResponse_Action = 0
	ProcessHttpResponseResponse_ABORT    ProcessHttpResponseResponse_Action = 1 // Rarely used for response, but let's keep consistent
)

// Enum value maps for ProcessHttpResponseResponse_Action.
var (
	ProcessHttpResponseResponse_Action_name = map[int32]string{
		0: "CONTINUE",
		1: "ABORT",
	}
	ProcessHttpResponseResponse_Action_value = map[string]int32{
		"CONTINUE": 0,
		"ABORT":    1,
	}
)

func (x ProcessHttpResponseResponse_Action) Enum() *ProcessHttpResponseResponse_Action {
	p := new(ProcessHttpResponseResponse_Action)
	*p = x
	return p
}

func (x ProcessHttpResponseResponse_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessHttpResponseResponse_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_proto_enumTypes[4].Descriptor()
}

func (ProcessHttpResponseResponse_Action) Type() protoreflect.EnumType {
	return &file_plugin_proto_enumTypes[4]
}

func (x ProcessHttpResponseResponse_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessHttpResponseResponse_Action.Descriptor instead.
func (ProcessHttpResponseResponse_Action) EnumDescriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{12, 0}
}

type ProcessTunnelDataRequest_Side int32

const (
	ProcessTunnelDataRequest_CLIENT ProcessTunnelDataRequest_Side = 0
	ProcessTunnelDataRequest_SERVER ProcessTunnelDataRequest_Side = 1
)

// Enum value maps for ProcessTunnelDataRequest_Side.
var (
	ProcessTunnelDataRequest_Side_name = map[int32]string{
		0: "CLIENT",
		1: "SERVER",
	}
	ProcessTunnelDataRequest_Side_value = map[string]int32{
		"CLIENT": 0,
		"SERVER": 1,
	}
)

func (x ProcessTunnelDataRequest_Side) Enum() *ProcessTunnelDataRequest_Side {
	p := new(ProcessTunnelDataRequest_Side)
	*p = x
	return p
}

func (x ProcessTunnelDataRequest_Side) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessTunnelDataRequest_Side) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_proto_enumTypes[5].Descriptor()
}

func (ProcessTunnelDataRequest_Side) Type() protoreflect.EnumType {
	return &file_plugin_proto_enumTypes[5]
}

func (x ProcessTunnelDataRequest_Side) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessTunnelDataRequest_Side.Descriptor instead.
func (ProcessTunnelDataRequest_Side) EnumDescriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{13, 0}
}

type ProcessTunnelDataRequest_Direction int32

const (
	ProcessTunnelDataRequest_INGRESS ProcessTunnelDataRequest_Direction = 0
	ProcessTunnelDataRequest_EGRESS  ProcessTunnelDataRequest_Direction = 1
	ProcessTunnelDataRequest_BOTH    ProcessTunnelDataRequest_Direction = 2
)

// Enum value maps for ProcessTunnelDataRequest_Direction.
var (
	ProcessTunnelDataRequest_Direction_name = map[int32]string{
		0: "INGRESS",
		1: "EGRESS",
		2: "BOTH",
	}
	ProcessTunnelDataRequest_Direction_value = map[string]int32{
		"INGRESS": 0,
		"EGRESS":  1,
		"BOTH":    2,
	}
)

func (x ProcessTunnelDataRequest_Direction) Enum() *ProcessTunnelDataRequest_Direction {
	p := new(ProcessTunnelDataRequest_Direction)
	*p = x
	return p
}

func (x ProcessTunnelDataRequest_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessTunnelDataRequest_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_proto_enumTypes[6].Descriptor()
}

func (ProcessTunnelDataRequest_Direction) Type() protoreflect.EnumType {
	return &file_plugin_proto_enumTypes[6]
}

func (x ProcessTunnelDataRequest_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessTunnelDataRequest_Direction.Descriptor instead.
func (ProcessTunnelDataRequest_Direction) EnumDescriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{13, 1}
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_plugin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{0}
}

type HealthCheckResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Indicates whether the service is healthy.
	Healthy bool `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	// Optional message providing additional status details.
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_plugin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *HealthCheckResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetPluginInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPluginInfoRequest) Reset() {
	*x = GetPluginInfoRequest{}
	mi := &file_plugin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPluginInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginInfoRequest) ProtoMessage() {}

func (x *GetPluginInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginInfoRequest.ProtoReflect.Descriptor instead.
func (*GetPluginInfoRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{2}
}

type GetPluginInfoResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Name          string                          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                        // Required
	Version       string                          `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`                                                  // Required
	Author        string                          `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`                                                    // Optional
	Url           string                          `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`                                                          // Optional
	Platform      string                          `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`                                                // Optional
	Direction     GetPluginInfoResponse_Direction `protobuf:"varint,6,opt,name=direction,proto3,enum=plugin.GetPluginInfoResponse_Direction" json:"direction,omitempty"` // Optional
	Side          GetPluginInfoResponse_Side      `protobuf:"varint,7,opt,name=side,proto3,enum=plugin.GetPluginInfoResponse_Side" json:"side,omitempty"`                // Optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPluginInfoResponse) Reset() {
	*x = GetPluginInfoResponse{}
	mi := &file_plugin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPluginInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginInfoResponse) ProtoMessage() {}

func (x *GetPluginInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginInfoResponse.ProtoReflect.Descriptor instead.
func (*GetPluginInfoResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *GetPluginInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPluginInfoResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetPluginInfoResponse) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *GetPluginInfoResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetPluginInfoResponse) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *GetPluginInfoResponse) GetDirection() GetPluginInfoResponse_Direction {
	if x != nil {
		return x.Direction
	}
	return GetPluginInfoResponse_INGRESS
}

func (x *GetPluginInfoResponse) GetSide() GetPluginInfoResponse_Side {
	if x != nil {
		return x.Side
	}
	return GetPluginInfoResponse_CLIENT
}

type GetPluginCapabilitiesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPluginCapabilitiesRequest) Reset() {
	*x = GetPluginCapabilitiesRequest{}
	mi := &file_plugin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPluginCapabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginCapabilitiesRequest) ProtoMessage() {}

func (x *GetPluginCapabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginCapabilitiesRequest.ProtoReflect.Descriptor instead.
func (*GetPluginCapabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{4}
}

type GetPluginCapabilitiesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Indicates whether this plugin can handle HTTP forward proxying
	CanHandleHttpForward bool `protobuf:"varint,1,opt,name=can_handle_http_forward,json=canHandleHttpForward,proto3" json:"can_handle_http_forward,omitempty"`
	// Indicates whether this plugin can handle tunnel-based (TCP/TLS) modifications
	CanHandleTunnel bool `protobuf:"varint,2,opt,name=can_handle_tunnel,json=canHandleTunnel,proto3" json:"can_handle_tunnel,omitempty"`
	// Protocols the plugin is capable of handling
	Protocols     []GetPluginCapabilitiesResponse_SupportedProtocol `protobuf:"varint,3,rep,packed,name=protocols,proto3,enum=plugin.GetPluginCapabilitiesResponse_SupportedProtocol" json:"protocols,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPluginCapabilitiesResponse) Reset() {
	*x = GetPluginCapabilitiesResponse{}
	mi := &file_plugin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPluginCapabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginCapabilitiesResponse) ProtoMessage() {}

func (x *GetPluginCapabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginCapabilitiesResponse.ProtoReflect.Descriptor instead.
func (*GetPluginCapabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{5}
}

func (x *GetPluginCapabilitiesResponse) GetCanHandleHttpForward() bool {
	if x != nil {
		return x.CanHandleHttpForward
	}
	return false
}

func (x *GetPluginCapabilitiesResponse) GetCanHandleTunnel() bool {
	if x != nil {
		return x.CanHandleTunnel
	}
	return false
}

func (x *GetPluginCapabilitiesResponse) GetProtocols() []GetPluginCapabilitiesResponse_SupportedProtocol {
	if x != nil {
		return x.Protocols
	}
	return nil
}

type HttpHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpHeader) Reset() {
	*x = HttpHeader{}
	mi := &file_plugin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpHeader) ProtoMessage() {}

func (x *HttpHeader) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpHeader.ProtoReflect.Descriptor instead.
func (*HttpHeader) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{6}
}

func (x *HttpHeader) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HttpHeader) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type HttpRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Headers       []*HttpHeader          `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty"`
	Body          []byte                 `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpRequest) Reset() {
	*x = HttpRequest{}
	mi := &file_plugin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpRequest) ProtoMessage() {}

func (x *HttpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpRequest.ProtoReflect.Descriptor instead.
func (*HttpRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{7}
}

func (x *HttpRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HttpRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *HttpRequest) GetHeaders() []*HttpHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type HttpResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    uint32                 `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Headers       []*HttpHeader          `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty"`
	Body          []byte                 `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpResponse) Reset() {
	*x = HttpResponse{}
	mi := &file_plugin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpResponse) ProtoMessage() {}

func (x *HttpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpResponse.ProtoReflect.Descriptor instead.
func (*HttpResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{8}
}

func (x *HttpResponse) GetStatusCode() uint32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *HttpResponse) GetHeaders() []*HttpHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type ProcessHttpRequestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       *HttpRequest           `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessHttpRequestRequest) Reset() {
	*x = ProcessHttpRequestRequest{}
	mi := &file_plugin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessHttpRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessHttpRequestRequest) ProtoMessage() {}

func (x *ProcessHttpRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessHttpRequestRequest.ProtoReflect.Descriptor instead.
func (*ProcessHttpRequestRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{9}
}

func (x *ProcessHttpRequestRequest) GetRequest() *HttpRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type ProcessHttpRequestResponse struct {
	state  protoimpl.MessageState            `protogen:"open.v1"`
	Action ProcessHttpRequestResponse_Action `protobuf:"varint,1,opt,name=action,proto3,enum=plugin.ProcessHttpRequestResponse_Action" json:"action,omitempty"`
	// If action == CONTINUE, the plugin may provide a modified request.
	// If not set, the proxy should assume no change to the HTTP request.
	ModifiedRequest *HttpRequest `protobuf:"bytes,2,opt,name=modified_request,json=modifiedRequest,proto3" json:"modified_request,omitempty"`
	// If action == ABORT, the plugin must provide an http_response to send immediately
	// back to the client.
	AbortResponse *HttpResponse `protobuf:"bytes,3,opt,name=abort_response,json=abortResponse,proto3" json:"abort_response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessHttpRequestResponse) Reset() {
	*x = ProcessHttpRequestResponse{}
	mi := &file_plugin_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessHttpRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessHttpRequestResponse) ProtoMessage() {}

func (x *ProcessHttpRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessHttpRequestResponse.ProtoReflect.Descriptor instead.
func (*ProcessHttpRequestResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{10}
}

func (x *ProcessHttpRequestResponse) GetAction() ProcessHttpRequestResponse_Action {
	if x != nil {
		return x.Action
	}
	return ProcessHttpRequestResponse_CONTINUE
}

func (x *ProcessHttpRequestResponse) GetModifiedRequest() *HttpRequest {
	if x != nil {
		return x.ModifiedRequest
	}
	return nil
}

func (x *ProcessHttpRequestResponse) GetAbortResponse() *HttpResponse {
	if x != nil {
		return x.AbortResponse
	}
	return nil
}

type ProcessHttpResponseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *HttpResponse          `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessHttpResponseRequest) Reset() {
	*x = ProcessHttpResponseRequest{}
	mi := &file_plugin_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessHttpResponseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessHttpResponseRequest) ProtoMessage() {}

func (x *ProcessHttpResponseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessHttpResponseRequest.ProtoReflect.Descriptor instead.
func (*ProcessHttpResponseRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{11}
}

func (x *ProcessHttpResponseRequest) GetResponse() *HttpResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type ProcessHttpResponseResponse struct {
	state  protoimpl.MessageState             `protogen:"open.v1"`
	Action ProcessHttpResponseResponse_Action `protobuf:"varint,1,opt,name=action,proto3,enum=plugin.ProcessHttpResponseResponse_Action" json:"action,omitempty"`
	// If action == CONTINUE, the plugin may provide a modified response.
	ModifiedResponse *HttpResponse `protobuf:"bytes,2,opt,name=modified_response,json=modifiedResponse,proto3" json:"modified_response,omitempty"`
	// If action == ABORT, the plugin must provide an http_response to send immediately
	// back to the client, short-circuiting normal flow.
	AbortResponse *HttpResponse `protobuf:"bytes,3,opt,name=abort_response,json=abortResponse,proto3" json:"abort_response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessHttpResponseResponse) Reset() {
	*x = ProcessHttpResponseResponse{}
	mi := &file_plugin_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessHttpResponseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessHttpResponseResponse) ProtoMessage() {}

func (x *ProcessHttpResponseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessHttpResponseResponse.ProtoReflect.Descriptor instead.
func (*ProcessHttpResponseResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{12}
}

func (x *ProcessHttpResponseResponse) GetAction() ProcessHttpResponseResponse_Action {
	if x != nil {
		return x.Action
	}
	return ProcessHttpResponseResponse_CONTINUE
}

func (x *ProcessHttpResponseResponse) GetModifiedResponse() *HttpResponse {
	if x != nil {
		return x.ModifiedResponse
	}
	return nil
}

func (x *ProcessHttpResponseResponse) GetAbortResponse() *HttpResponse {
	if x != nil {
		return x.AbortResponse
	}
	return nil
}

type ProcessTunnelDataRequest struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Id            string                             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Side          ProcessTunnelDataRequest_Side      `protobuf:"varint,2,opt,name=side,proto3,enum=plugin.ProcessTunnelDataRequest_Side" json:"side,omitempty"`
	Direction     ProcessTunnelDataRequest_Direction `protobuf:"varint,3,opt,name=direction,proto3,enum=plugin.ProcessTunnelDataRequest_Direction" json:"direction,omitempty"`
	Chunk         []byte                             `protobuf:"bytes,4,opt,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessTunnelDataRequest) Reset() {
	*x = ProcessTunnelDataRequest{}
	mi := &file_plugin_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessTunnelDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessTunnelDataRequest) ProtoMessage() {}

func (x *ProcessTunnelDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessTunnelDataRequest.ProtoReflect.Descriptor instead.
func (*ProcessTunnelDataRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{13}
}

func (x *ProcessTunnelDataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProcessTunnelDataRequest) GetSide() ProcessTunnelDataRequest_Side {
	if x != nil {
		return x.Side
	}
	return ProcessTunnelDataRequest_CLIENT
}

func (x *ProcessTunnelDataRequest) GetDirection() ProcessTunnelDataRequest_Direction {
	if x != nil {
		return x.Direction
	}
	return ProcessTunnelDataRequest_INGRESS
}

func (x *ProcessTunnelDataRequest) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type ProcessTunnelDataResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Action:
	//
	//	*ProcessTunnelDataResponse_PassThrough
	//	*ProcessTunnelDataResponse_Replace
	//	*ProcessTunnelDataResponse_Buffer
	//	*ProcessTunnelDataResponse_Close
	Action        isProcessTunnelDataResponse_Action `protobuf_oneof:"action"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessTunnelDataResponse) Reset() {
	*x = ProcessTunnelDataResponse{}
	mi := &file_plugin_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessTunnelDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessTunnelDataResponse) ProtoMessage() {}

func (x *ProcessTunnelDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessTunnelDataResponse.ProtoReflect.Descriptor instead.
func (*ProcessTunnelDataResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{14}
}

func (x *ProcessTunnelDataResponse) GetAction() isProcessTunnelDataResponse_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *ProcessTunnelDataResponse) GetPassThrough() *PassThrough {
	if x != nil {
		if x, ok := x.Action.(*ProcessTunnelDataResponse_PassThrough); ok {
			return x.PassThrough
		}
	}
	return nil
}

func (x *ProcessTunnelDataResponse) GetReplace() *Replace {
	if x != nil {
		if x, ok := x.Action.(*ProcessTunnelDataResponse_Replace); ok {
			return x.Replace
		}
	}
	return nil
}

func (x *ProcessTunnelDataResponse) GetBuffer() *Buffer {
	if x != nil {
		if x, ok := x.Action.(*ProcessTunnelDataResponse_Buffer); ok {
			return x.Buffer
		}
	}
	return nil
}

func (x *ProcessTunnelDataResponse) GetClose() *Close {
	if x != nil {
		if x, ok := x.Action.(*ProcessTunnelDataResponse_Close); ok {
			return x.Close
		}
	}
	return nil
}

type isProcessTunnelDataResponse_Action interface {
	isProcessTunnelDataResponse_Action()
}

type ProcessTunnelDataResponse_PassThrough struct {
	PassThrough *PassThrough `protobuf:"bytes,1,opt,name=pass_through,json=passThrough,proto3,oneof"`
}

type ProcessTunnelDataResponse_Replace struct {
	Replace *Replace `protobuf:"bytes,2,opt,name=replace,proto3,oneof"`
}

type ProcessTunnelDataResponse_Buffer struct {
	Buffer *Buffer `protobuf:"bytes,3,opt,name=buffer,proto3,oneof"`
}

type ProcessTunnelDataResponse_Close struct {
	Close *Close `protobuf:"bytes,4,opt,name=close,proto3,oneof"`
}

func (*ProcessTunnelDataResponse_PassThrough) isProcessTunnelDataResponse_Action() {}

func (*ProcessTunnelDataResponse_Replace) isProcessTunnelDataResponse_Action() {}

func (*ProcessTunnelDataResponse_Buffer) isProcessTunnelDataResponse_Action() {}

func (*ProcessTunnelDataResponse_Close) isProcessTunnelDataResponse_Action() {}

// Indicates that the plugin did not modify the chunk.
type PassThrough struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunk         []byte                 `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PassThrough) Reset() {
	*x = PassThrough{}
	mi := &file_plugin_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PassThrough) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassThrough) ProtoMessage() {}

func (x *PassThrough) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassThrough.ProtoReflect.Descriptor instead.
func (*PassThrough) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{15}
}

func (x *PassThrough) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

// Indicates that the plugin replaced the chunk with a modified version.
type Replace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModifiedChunk []byte                 `protobuf:"bytes,1,opt,name=modified_chunk,json=modifiedChunk,proto3" json:"modified_chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Replace) Reset() {
	*x = Replace{}
	mi := &file_plugin_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Replace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Replace) ProtoMessage() {}

func (x *Replace) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Replace.ProtoReflect.Descriptor instead.
func (*Replace) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{16}
}

func (x *Replace) GetModifiedChunk() []byte {
	if x != nil {
		return x.ModifiedChunk
	}
	return nil
}

// Indicates that the plugin is buffering this data
type Buffer struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	EstimatedTimeToReleaseMs int32                  `protobuf:"varint,1,opt,name=estimated_time_to_release_ms,json=estimatedTimeToReleaseMs,proto3" json:"estimated_time_to_release_ms,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Buffer) Reset() {
	*x = Buffer{}
	mi := &file_plugin_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Buffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Buffer) ProtoMessage() {}

func (x *Buffer) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Buffer.ProtoReflect.Descriptor instead.
func (*Buffer) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{17}
}

func (x *Buffer) GetEstimatedTimeToReleaseMs() int32 {
	if x != nil {
		return x.EstimatedTimeToReleaseMs
	}
	return 0
}

// Indicates that the plugin wants to close the tunnel immediately.
type Close struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optionally include a reason.
	Reason        string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Close) Reset() {
	*x = Close{}
	mi := &file_plugin_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Close) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Close) ProtoMessage() {}

func (x *Close) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Close.ProtoReflect.Descriptor instead.
func (*Close) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{18}
}

func (x *Close) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_plugin_proto protoreflect.FileDescriptor

const file_plugin_proto_rawDesc = "" +
	"\n" +
	"\fplugin.proto\x12\x06plugin\"\x14\n" +
	"\x12HealthCheckRequest\"I\n" +
	"\x13HealthCheckResponse\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x16\n" +
	"\x14GetPluginInfoRequest\"\xe3\x02\n" +
	"\x15GetPluginInfoResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x16\n" +
	"\x06author\x18\x03 \x01(\tR\x06author\x12\x10\n" +
	"\x03url\x18\x04 \x01(\tR\x03url\x12\x1a\n" +
	"\bplatform\x18\x05 \x01(\tR\bplatform\x12E\n" +
	"\tdirection\x18\x06 \x01(\x0e2'.plugin.GetPluginInfoResponse.DirectionR\tdirection\x126\n" +
	"\x04side\x18\a \x01(\x0e2\".plugin.GetPluginInfoResponse.SideR\x04side\"'\n" +
	"\x04Side\x12\n" +
	"\n" +
	"\x06CLIENT\x10\x00\x12\n" +
	"\n" +
	"\x06SERVER\x10\x01\x12\a\n" +
	"\x03ANY\x10\x02\".\n" +
	"\tDirection\x12\v\n" +
	"\aINGRESS\x10\x00\x12\n" +
	"\n" +
	"\x06EGRESS\x10\x01\x12\b\n" +
	"\x04BOTH\x10\x02\"\x1e\n" +
	"\x1cGetPluginCapabilitiesRequest\"\x9d\x02\n" +
	"\x1dGetPluginCapabilitiesResponse\x125\n" +
	"\x17can_handle_http_forward\x18\x01 \x01(\bR\x14canHandleHttpForward\x12*\n" +
	"\x11can_handle_tunnel\x18\x02 \x01(\bR\x0fcanHandleTunnel\x12U\n" +
	"\tprotocols\x18\x03 \x03(\x0e27.plugin.GetPluginCapabilitiesResponse.SupportedProtocolR\tprotocols\"B\n" +
	"\x11SupportedProtocol\x12\b\n" +
	"\x04NONE\x10\x00\x12\b\n" +
	"\x04HTTP\x10\x01\x12\t\n" +
	"\x05HTTPS\x10\x02\x12\x0e\n" +
	"\n" +
	"POSTGRESQL\x10\x03\"6\n" +
	"\n" +
	"HttpHeader\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"{\n" +
	"\vHttpRequest\x12\x16\n" +
	"\x06method\x18\x01 \x01(\tR\x06method\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12,\n" +
	"\aheaders\x18\x03 \x03(\v2\x12.plugin.HttpHeaderR\aheaders\x12\x12\n" +
	"\x04body\x18\x04 \x01(\fR\x04body\"q\n" +
	"\fHttpResponse\x12\x1f\n" +
	"\vstatus_code\x18\x01 \x01(\rR\n" +
	"statusCode\x12,\n" +
	"\aheaders\x18\x02 \x03(\v2\x12.plugin.HttpHeaderR\aheaders\x12\x12\n" +
	"\x04body\x18\x03 \x01(\fR\x04body\"J\n" +
	"\x19ProcessHttpRequestRequest\x12-\n" +
	"\arequest\x18\x01 \x01(\v2\x13.plugin.HttpRequestR\arequest\"\xff\x01\n" +
	"\x1aProcessHttpRequestResponse\x12A\n" +
	"\x06action\x18\x01 \x01(\x0e2).plugin.ProcessHttpRequestResponse.ActionR\x06action\x12>\n" +
	"\x10modified_request\x18\x02 \x01(\v2\x13.plugin.HttpRequestR\x0fmodifiedRequest\x12;\n" +
	"\x0eabort_response\x18\x03 \x01(\v2\x14.plugin.HttpResponseR\rabortResponse\"!\n" +
	"\x06Action\x12\f\n" +
	"\bCONTINUE\x10\x00\x12\t\n" +
	"\x05ABORT\x10\x01\"N\n" +
	"\x1aProcessHttpResponseRequest\x120\n" +
	"\bresponse\x18\x01 \x01(\v2\x14.plugin.HttpResponseR\bresponse\"\x84\x02\n" +
	"\x1bProcessHttpResponseResponse\x12B\n" +
	"\x06action\x18\x01 \x01(\x0e2*.plugin.ProcessHttpResponseResponse.ActionR\x06action\x12A\n" +
	"\x11modified_response\x18\x02 \x01(\v2\x14.plugin.HttpResponseR\x10modifiedResponse\x12;\n" +
	"\x0eabort_response\x18\x03 \x01(\v2\x14.plugin.HttpResponseR\rabortResponse\"!\n" +
	"\x06Action\x12\f\n" +
	"\bCONTINUE\x10\x00\x12\t\n" +
	"\x05ABORT\x10\x01\"\x95\x02\n" +
	"\x18ProcessTunnelDataRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x129\n" +
	"\x04side\x18\x02 \x01(\x0e2%.plugin.ProcessTunnelDataRequest.SideR\x04side\x12H\n" +
	"\tdirection\x18\x03 \x01(\x0e2*.plugin.ProcessTunnelDataRequest.DirectionR\tdirection\x12\x14\n" +
	"\x05chunk\x18\x04 \x01(\fR\x05chunk\"\x1e\n" +
	"\x04Side\x12\n" +
	"\n" +
	"\x06CLIENT\x10\x00\x12\n" +
	"\n" +
	"\x06SERVER\x10\x01\".\n" +
	"\tDirection\x12\v\n" +
	"\aINGRESS\x10\x00\x12\n" +
	"\n" +
	"\x06EGRESS\x10\x01\x12\b\n" +
	"\x04BOTH\x10\x02\"\xdd\x01\n" +
	"\x19ProcessTunnelDataResponse\x128\n" +
	"\fpass_through\x18\x01 \x01(\v2\x13.plugin.PassThroughH\x00R\vpassThrough\x12+\n" +
	"\areplace\x18\x02 \x01(\v2\x0f.plugin.ReplaceH\x00R\areplace\x12(\n" +
	"\x06buffer\x18\x03 \x01(\v2\x0e.plugin.BufferH\x00R\x06buffer\x12%\n" +
	"\x05close\x18\x04 \x01(\v2\r.plugin.CloseH\x00R\x05closeB\b\n" +
	"\x06action\"#\n" +
	"\vPassThrough\x12\x14\n" +
	"\x05chunk\x18\x01 \x01(\fR\x05chunk\"0\n" +
	"\aReplace\x12%\n" +
	"\x0emodified_chunk\x18\x01 \x01(\fR\rmodifiedChunk\"H\n" +
	"\x06Buffer\x12>\n" +
	"\x1cestimated_time_to_release_ms\x18\x01 \x01(\x05R\x18estimatedTimeToReleaseMs\"\x1f\n" +
	"\x05Close\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason2\xa2\x04\n" +
	"\rPluginService\x12F\n" +
	"\vHealthCheck\x12\x1a.plugin.HealthCheckRequest\x1a\x1b.plugin.HealthCheckResponse\x12L\n" +
	"\rGetPluginInfo\x12\x1c.plugin.GetPluginInfoRequest\x1a\x1d.plugin.GetPluginInfoResponse\x12d\n" +
	"\x15GetPluginCapabilities\x12$.plugin.GetPluginCapabilitiesRequest\x1a%.plugin.GetPluginCapabilitiesResponse\x12[\n" +
	"\x12ProcessHttpRequest\x12!.plugin.ProcessHttpRequestRequest\x1a\".plugin.ProcessHttpRequestResponse\x12^\n" +
	"\x13ProcessHttpResponse\x12\".plugin.ProcessHttpResponseRequest\x1a#.plugin.ProcessHttpResponseResponse\x12X\n" +
	"\x11ProcessTunnelData\x12 .plugin.ProcessTunnelDataRequest\x1a!.plugin.ProcessTunnelDataResponseB3Z1github.com/ljagiello/fault-anthropic-plugin/protob\x06proto3"

var (
	file_plugin_proto_rawDescOnce sync.Once
	file_plugin_proto_rawDescData []byte
)

func file_plugin_proto_rawDescGZIP() []byte {
	file_plugin_proto_rawDescOnce.Do(func() {
		file_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_plugin_proto_rawDesc), len(file_plugin_proto_rawDesc)))
	})
	return file_plugin_proto_rawDescData
}

var file_plugin_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_plugin_proto_goTypes = []any{
	(GetPluginInfoResponse_Side)(0),                      // 0: plugin.GetPluginInfoResponse.Side
	(GetPluginInfoResponse_Direction)(0),                 // 1: plugin.GetPluginInfoResponse.Direction
	(GetPluginCapabilitiesResponse_SupportedProtocol)(0), // 2: plugin.GetPluginCapabilitiesResponse.SupportedProtocol
	(ProcessHttpRequestResponse_Action)(0),               // 3: plugin.ProcessHttpRequestResponse.Action
	(ProcessHttpResponseResponse_Action)(0),              // 4: plugin.ProcessHttpResponseResponse.Action
	(ProcessTunnelDataRequest_Side)(0),                   // 5: plugin.ProcessTunnelDataRequest.Side
	(ProcessTunnelDataRequest_Direction)(0),              // 6: plugin.ProcessTunnelDataRequest.Direction
	(*HealthCheckRequest)(nil),                           // 7: plugin.HealthCheckRequest
	(*HealthCheckResponse)(nil),                          // 8: plugin.HealthCheckResponse
	(*GetPluginInfoRequest)(nil),                         // 9: plugin.GetPluginInfoRequest
	(*GetPluginInfoResponse)(nil),                        // 10: plugin.GetPluginInfoResponse
	(*GetPluginCapabilitiesRequest)(nil),                 // 11: plugin.GetPluginCapabilitiesRequest
	(*GetPluginCapabilitiesResponse)(nil),                // 12: plugin.GetPluginCapabilitiesResponse
	(*HttpHeader)(nil),                                   // 13: plugin.HttpHeader
	(*HttpRequest)(nil),                                  // 14: plugin.HttpRequest
	(*HttpResponse)(nil),                                 // 15: plugin.HttpResponse
	(*ProcessHttpRequestRequest)(nil),                    // 16: plugin.ProcessHttpRequestRequest
	(*ProcessHttpRequestResponse)(nil),                   // 17: plugin.ProcessHttpRequestResponse
	(*ProcessHttpResponseRequest)(nil),                   // 18: plugin.ProcessHttpResponseRequest
	(*ProcessHttpResponseResponse)(nil),                  // 19: plugin.ProcessHttpResponseResponse
	(*ProcessTunnelDataRequest)(nil),                     // 20: plugin.ProcessTunnelDataRequest
	(*ProcessTunnelDataResponse)(nil),                    // 21: plugin.ProcessTunnelDataResponse
	(*PassThrough)(nil),                                  // 22: plugin.PassThrough
	(*Replace)(nil),                                      // 23: plugin.Replace
	(*Buffer)(nil),                                       // 24: plugin.Buffer
	(*Close)(nil),                                        // 25: plugin.Close
}
var file_plugin_proto_depIdxs = []int32{
	1,  // 0: plugin.GetPluginInfoResponse.direction:type_name -> plugin.GetPluginInfoResponse.Direction
	0,  // 1: plugin.GetPluginInfoResponse.side:type_name -> plugin.GetPluginInfoResponse.Side
	2,  // 2: plugin.GetPluginCapabilitiesResponse.protocols:type_name -> plugin.GetPluginCapabilitiesResponse.SupportedProtocol
	13, // 3: plugin.HttpRequest.headers:type_name -> plugin.HttpHeader
	13, // 4: plugin.HttpResponse.headers:type_name -> plugin.HttpHeader
	14, // 5: plugin.ProcessHttpRequestRequest.request:type_name -> plugin.HttpRequest
	3,  // 6: plugin.ProcessHttpRequestResponse.action:type_name -> plugin.ProcessHttpRequestResponse.Action
	14, // 7: plugin.ProcessHttpRequestResponse.modified_request:type_name -> plugin.HttpRequest
	15, // 8: plugin.ProcessHttpRequestResponse.abort_response:type_name -> plugin.HttpResponse
	15, // 9: plugin.ProcessHttpResponseRequest.response:type_name -> plugin.HttpResponse
	4,  // 10: plugin.ProcessHttpResponseResponse.action:type_name -> plugin.ProcessHttpResponseResponse.Action
	15, // 11: plugin.ProcessHttpResponseResponse.modified_response:type_name -> plugin.HttpResponse
	15, // 12: plugin.ProcessHttpResponseResponse.abort_response:type_name -> plugin.HttpResponse
	5,  // 13: plugin.ProcessTunnelDataRequest.side:type_name -> plugin.ProcessTunnelDataRequest.Side
	6,  // 14: plugin.ProcessTunnelDataRequest.direction:type_name -> plugin.ProcessTunnelDataRequest.Direction
	22, // 15: plugin.ProcessTunnelDataResponse.pass_through:type_name -> plugin.PassThrough
	23, // 16: plugin.ProcessTunnelDataResponse.replace:type_name -> plugin.Replace
	24, // 17: plugin.ProcessTunnelDataResponse.buffer:type_name -> plugin.Buffer
	25, // 18: plugin.ProcessTunnelDataResponse.close:type_name -> plugin.Close
	7,  // 19: plugin.PluginService.HealthCheck:input_type -> plugin.HealthCheckRequest
	9,  // 20: plugin.PluginService.GetPluginInfo:input_type -> plugin.GetPluginInfoRequest
	11, // 21: plugin.PluginService.GetPluginCapabilities:input_type -> plugin.GetPluginCapabilitiesRequest
	16, // 22: plugin.PluginService.ProcessHttpRequest:input_type -> plugin.ProcessHttpRequestRequest
	18, // 23: plugin.PluginService.ProcessHttpResponse:input_type -> plugin.ProcessHttpResponseRequest
	20, // 24: plugin.PluginService.ProcessTunnelData:input_type -> plugin.ProcessTunnelDataRequest
	8,  // 25: plugin.PluginService.HealthCheck:output_type -> plugin.HealthCheckResponse
	10, // 26: plugin.PluginService.GetPluginInfo:output_type -> plugin.GetPluginInfoResponse
	12, // 27: plugin.PluginService.GetPluginCapabilities:output_type -> plugin.GetPluginCapabilitiesResponse
	17, // 28: plugin.PluginService.ProcessHttpRequest:output_type -> plugin.ProcessHttpRequestResponse
	19, // 29: plugin.PluginService.ProcessHttpResponse:output_type -> plugin.ProcessHttpResponseResponse
	21, // 30: plugin.PluginService.ProcessTunnelData:output_type -> plugin.ProcessTunnelDataResponse
	25, // [25:31] is the sub-list for method output_type
	19, // [19:25] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_plugin_proto_init() }
func file_plugin_proto_init() {
	if File_plugin_proto != nil {
		return
	}
	file_plugin_proto_msgTypes[14].OneofWrappers = []any{
		(*ProcessTunnelDataResponse_PassThrough)(nil),
		(*ProcessTunnelDataResponse_Replace)(nil),
		(*ProcessTunnelDataResponse_Buffer)(nil),
		(*ProcessTunnelDataResponse_Close)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_plugin_proto_rawDesc), len(file_plugin_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_plugin_proto_goTypes,
		DependencyIndexes: file_plugin_proto_depIdxs,
		EnumInfos:         file_plugin_proto_enumTypes,
		MessageInfos:      file_plugin_proto_msgTypes,
	}.Build()
	File_plugin_proto = out.File
	file_plugin_proto_goTypes = nil
	file_plugin_proto_depIdxs = nil
}
